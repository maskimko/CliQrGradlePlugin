
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'


group = 'ua.pp.msk.gradle'
version = '1.0.0'



repositories {
    mavenCentral()
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

dependencies {
    compile gradleApi()
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.10'
    testCompile 'junit:junit:4.11'
}


task wrapper(type: Wrapper) { gradleVersion = '2.10' }



uploadArchives {
    repositories {
    
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
           
            snapshotRepository (url: "https://oss.sonatype.org/content/repositories/snapshots", id: "ossrh"){
                authentication(userName: System.properties['ossrh_user'], password: System.properties['ossrh_password'])
            }
               
            
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/", id: "ossrh") {
                authentication(userName: System.properties['ossrh_user'], password: System.properties['ossrh_password'])
            }
            pom.project {
                groupId "${project.group}"
                artifactId "${project.name}"
                version "${project.version}"

                name "Cliqr Gradle Plugin"
                description "Simple Gradle plugin for managing CliQr jobs"
                url 'https://github.com/maskimko/CliQrGradlePlugin.git'

                    
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    url "https://github.com/maskimko/CliQrGradlePlugin.git";
                    connection "https://github.com/maskimko/CliQrGradlePlugin.git";
                    developerConnection "https://github.com/maskimko/CliQrGradlePlugin.git";
                }
                developers {
                    developer {
                        id "maskimko";
                        name "Maksym Shkolnyi";
                        email "maskimko@ukr.net";
                    }
                }
                    
            }
          
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom.withXml {
                asNode().appendNode('description',
                                'CliQr gradle plugin to manage CliQr jobs')
                def l = asNode().appendNode('licenses').appendNode('license')
                l.appendNode('name','The Apache Software License, Version 2.0')
                l.appendNode('url','http://www.apache.org/licenses/LICENSE-2.0.txt')
                l.appendNode('distribution', 'repo')
                 
                def s= asNode().appendNode('scm')
                s.appendNode('url', "https://github.com/maskimko/CliQrGradlePlugin.git")
                s.appendNode('connection', "https://github.com/maskimko/CliQrGradlePlugin.git")
                s.appendNode('developerConnection', "https://github.com/maskimko/CliQrGradlePlugin.git")
                        
                def d = asNode().appendNode('developers').appendNode('developer')
                d.appendNode('id', "maskimko")
                d.appendNode('name', "Maksym Shkolnyi")
                d.appendNode('email', "maskimko@ukr.net")
            }
        }
    }
}
publishing {
    repositories {
        maven {
            credentials {
                username System.properties['ossrh_user']
                password System.properties['ossrh_password']
            }
            name 'ossrh'
            if(project.version.endsWith('-SNAPSHOT')) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
                //url uri('/tmp/lmr')
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
        
    }
}




